INSTALLATION ORDER
Projects not listed can be installed at any time
  git
  cython
  numpy
  scipy
  sympy
  matplotlib
  pandas
  pymc
  scikit-learn
  root (see below)
  seaborn

SOURCES
  cython        git@github.com:cython/cython.git
  git           git@github.com:git/git.git
  glances       git@github.com:nicolargo/glances
  google        [install from website]
  matplotlib    git@github.com:matplotlib/matplotlib.git
  mdPresent     git@github.com:mmoran0032/mdPresent.git
  numpy         git@github.com:numpy/numpy
  pandas        git@github.com:pydata/pandas
  pymc          git@github.com:pymc-devs/pymc.git
  rftg-0.9.4    [install from website]
  root          git@github.com:root-mirror/root
  scikit-learn  git@github.com:scikit-learn/scikit-learn
  scipy         git@github.com:scipy/scipy.git
  seaborn       git@github.com:mwaskom/seaborn.git
  sublimeText2  [install from website]
  sympy         git@github.com:sympy/sympy.git

PYTHON PACKAGES
Install all packages as just a local install through
  python3 setup.py install --user

GLANCES INSTALLATION
Unlike all of the other packages, install this using python2.7 and do not
install for just the user, i.e.
  sudo python2.7 setup.py install
This will allow the colored output which, for whatever reason, does not work
when installing for the user. Currently, no temperature output.

ROOT INSTALLATION
Default to using the fixed location and sourcing thisroot.sh to adjust paths

Currently, ROOT defaults to using python (i.e. python2.7) for all linking,
and ROOT can only be imported in python, not python3. I don't think this
will be an issue for me, especially with my move away from physics and into
the numpy/scipy/matplotlib regime, but it would be nice to test things out
in python3 anyway. Plus, I can't combine numpy/scipy with ROOT, since those
are compiled for python3 (and work fine right now, so I don't want to mess
with it). Like I said, maybe not a big issue, depending on what happens with
the STG detector stuff. Maybe it will just end up being my own personal
analysis code.

Tried the following on 2015-05-08 (12:35) with a clean root source directory
and it didn't work. I introduced another error, so I think I'm just going to
have to live with using python2.7 with ROOT.

Error fixed (couldn't find library) by running
  make clean
  make distclean
  ./configure linuxx8664gcc
  make -j 9
  . bin/thisroot.sh
and adding back the sourcing to my bashrc

  TESTING FOR PYTHON3 SUPPORT (doesn't work)
  Temporarily remove symbolic links in /usr/bin and replace them
    cd /usr/bin
    sudo rm python
    sudo rm python-config
    sudo ln -s python3.4 python
    sudo ln -s python3.4-config python-config

  CREATE LINK TO SHARED LIBRARY
    sudo ln -s /usr/lib/x86_64-linux-gnu/libpython3.4m.so /usr/lib/libpython3.4.so

  CONFIGURE
    cd /opt/root
    ./configure linuxx8664gcc

  RESET SYMBOLIC LINKS
    sudo rm python
    sudo rm python-config
    sudo ln -s python2.7 python
    sudo ln -s python2.7-config python-config
